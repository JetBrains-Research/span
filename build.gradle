import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext.kotlin_version = '1.3.21'

    repositories {
        maven { url "https://cache-redirector.jetbrains.com/repo1.maven.org/maven2" }
        maven { url "https://cache-redirector.jetbrains.com/jcenter.bintray.com" }

        // In case of issues with cache redirector:
        // jcenter()
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.dorongold.task-tree" version "1.5"
}

apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'kotlin'

mainClassName = "org.jetbrains.bio.span.SpanCLA"

sourceCompatibility = 1.8
targetCompatibility = sourceCompatibility
compileKotlin { kotlinOptions.jvmTarget = sourceCompatibility }
compileTestKotlin { kotlinOptions.jvmTarget = sourceCompatibility }

repositories {
    maven { url "https://dl.bintray.com/jetbrains-research/maven" }
    jcenter()
}

project(':bioinf-commons')

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-support-jdk8:0.1'

    // Logging dependencies
    compile("ch.qos.logback:logback-classic:1.2.3")
    compile("ch.qos.logback:logback-core:1.2.3")
    compile "org.slf4j:slf4j-api:1.7.25"


    compile project(':bioinf-commons')

    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

private String settingsFolder(final String propertyName, final String folderName) {
    if (!System.hasProperty(propertyName)) {
        return "${rootProject.buildDir}/.tests/$folderName"
    } else {
        return System.getProperty(propertyName)
    }
}

test {
    dependsOn ':bioinf-commons:generateTestOrganism'
    dependsOn ':bioinf-commons:test'

    include '**/*Test.class'

    ignoreFailures = true
    maxParallelForks = Runtime.runtime.availableProcessors()
    maxHeapSize = "1024m"

    testLogging.showStandardStreams = true

    systemProperty "genomes.path", settingsFolder("genomes.path", "genomes")
    systemProperty "experiments.path", settingsFolder("experiments.path", "experiments")
    systemProperty "teamcity.build.checkoutDir", System.getProperty("teamcity.build.checkoutDir")
}

// Major application version
version = "0.13"

task processBuildProperties(type: Copy) {
    shadowJar.dependsOn name
    
    // turn of cache for this task
    outputs.upToDateWhen { false }

    // Fix version and build in properties file
    from(sourceSets.main.resources) {
        include 'span.properties'
    }
    into sourceSets.main.output.resourcesDir
    filter(ReplaceTokens, tokens: [
            VERSION: version,
            BUILD: project.buildCounter,
            DATE: new Date().format('MMMM dd, yyyy')
    ])
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

shadowJar {
    // File name: "$baseName-$version-$classifier.jar"
    archiveBaseName.set('span')
    archiveVersion.set("${version}.${project.buildCounter}")
    archiveClassifier.set('')
    zip64 true
    mustRunAfter test
    // umm
    mustRunAfter clean
}

jar {
    manifest {
        attributes provider: 'gradle'
        attributes 'Application-Name': "SPAN $version"
        attributes 'Built-By': 'JetBrains Research TeamCity'
    }
}

clean {
    dependsOn ':bioinf-commons:clean'
}

// https://github.com/gradle/gradle/issues/5816
if (rootProject == project) {
    wrapper {
        gradleVersion = "6.5"
    }
}